project_name: instill

release:
  prerelease: auto
  draft: true
  name_template: "Instill CLI {{.Version}}"

env:
  - GO111MODULE=on

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy

builds:
  - <<: &build_defaults
      binary: bin/instill
      main: ./cmd/instill
      ldflags:
        - -s -w
        - -X github.com/instill-ai/cli/internal/build.Version={{ .Version }}
        - -X github.com/instill-ai/cli/internal/build.Date={{ time "2006-01-02" }}
        - -X github.com/instill-ai/cli/internal/oauth2.clientID={{ .Env.INSTILL_OAUTH_CLIENT_ID }}
        - -X github.com/instill-ai/cli/internal/oauth2.clientSecret={{ .Env.INSTILL_OAUTH_CLIENT_SECRET }}
        - -X main.updaterEnabled=instill-ai/cli
    id: macos
    goos: [darwin]
    goarch: [amd64]

  - <<: *build_defaults
    id: linux
    goos: [linux]
    goarch: [arm, arm64, amd64]
    env:
      - CGO_ENABLED=0

  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: [amd64]

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

checksum:
  name_template: "checksums_v{{ .Version }}_sha256.txt"

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  use: github
  sort: asc
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: "Bug fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1

brews:
  - tap:
      owner: instill-ai
      name: homebrew-tap
    description: Instill AI's official command-line tool
    homepage: https://github.com/instill-ai/cli
    license: "Apache-2.0"
    commit_author:
      name: droplet-bot
      email: 70758845+droplet-bot@users.noreply.github.com
    install: |
      bin.install "bin/instill"
      (bash_completion/"instill").write `#{bin}/instill completion -s bash`
      (fish_completion/"instill.fish").write `#{bin}/instill completion -s fish`
      (zsh_completion/"_instill").write `#{bin}/instill completion -s zsh`
    test: |
      assert_match "instill version #{version}", shell_output("#{bin}/instill --version")
